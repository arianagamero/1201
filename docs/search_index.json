[
["index.html", "Stat1201 Introduction 0.1 Contact 0.2 License", " Stat1201 Joyce Robbins 2018-10-31 Introduction Resources for Stat 1201 0.1 Contact Joyce Robbins: Columbia Profile / Website / Twitter / GitHub 0.2 License This work is licensed under a Creative Commons Attribution-ShareAlike 4.0 International License. "],
["chap1.html", "Chapter1 Descriptive Statistics 1.1 Stem and leaf plot (1.2) 1.2 Frequency histogram (1.2) 1.3 Density histogram (1.2) 1.4 Measures of location (1.3) 1.5 Measures of variability (1.4) 1.6 Boxplots (1.4)", " Chapter1 Descriptive Statistics Devore, Chapter 1 1.1 Stem and leaf plot (1.2) prices &lt;- c(379, 425, 450, 450, 499, 529, 535, 535, 545, 599, 665, 675, 699, 699, 725, 725, 745, 799) stem(prices) ## ## The decimal point is 2 digit(s) to the right of the | ## ## 3 | 8 ## 4 | 355 ## 5 | 03445 ## 6 | 078 ## 7 | 00335 ## 8 | 0 1.2 Frequency histogram (1.2) prices &lt;- c(379, 425, 450, 450, 499, 529, 535, 535, 545, 599, 665, 675, 699, 699, 725, 725, 745, 799) hist(prices) hist(prices, breaks = c(300, 400, 500, 600, 700, 800), col = &quot;lightblue&quot;) 1.3 Density histogram (1.2) prices &lt;- c(379, 425, 450, 450, 499, 529, 535, 535, 545, 599, 665, 675, 699, 699, 725, 725, 745, 799) hist(prices, freq = FALSE, breaks = c(300, 400, 500, 600, 700, 800), col = &quot;lightblue&quot;, las = 1) 1.4 Measures of location (1.3) prices &lt;- c(379, 425, 450, 450, 499, 529, 535, 535, 545, 599, 665, 675, 699, 699, 725, 725, 745, 799) mean(prices) ## [1] 593.2222 median(prices) ## [1] 572 ## quartiles quantile(prices) ## 0% 25% 50% 75% 100% ## 379.0 506.5 572.0 699.0 799.0 ## trimmed mean mean(prices, trim = .1) ## 10% trimmed mean ## [1] 593.75 1.5 Measures of variability (1.4) Sample variance prices &lt;- c(379, 425, 450, 450, 499, 529, 535, 535, 545, 599, 665, 675, 699, 699, 725, 725, 745, 799) var(prices) ## [1] 15981.48 Sample standard deviation sqrt(var(prices)) ## [1] 126.4179 sd(prices) ## [1] 126.4179 Five number summary (min, lower-hinge, median, upper-hinge, max) fivenum(prices) ## [1] 379 499 572 699 799 1.6 Boxplots (1.4) prices &lt;- c(379, 425, 450, 450, 499, 529, 535, 535, 545, 599, 665, 675, 699, 699, 725, 725, 745, 799) boxplot(prices) boxplot(prices, horizontal = TRUE) PTSD &lt;- c(10, 20, 25, 28, 31, 35, 37, 38, 38, 39, 39, 42, 46) Healthy &lt;- c(23, 39, 40, 41, 43, 47, 51, 58, 63, 66, 67, 69, 72) df &lt;- data.frame(Healthy, PTSD) boxplot(df, horizontal = TRUE) "],
["chap2.html", "Chapter2 Probability 2.1 Factorial (2.3) 2.2 Combinations (2.3) 2.3 Permutations (2.3)", " Chapter2 Probability Devore, Chapter 2 2.1 Factorial (2.3) factorial(5) ## [1] 120 2.2 Combinations (2.3) “5 choose 2” = choose 2 items out of 5 choose(5, 2) ## [1] 10 2.3 Permutations (2.3) There is no built-in function to calculate permutations. You can multiply the number of combinations by k!. Ex. Number of permutations of size 2 that can be formed from 5 distinct items: choose(5,2)*factorial(2) ## [1] 20 You can create your own function to do this: perm &lt;- function(n, k) {choose(n,k)*factorial(k)} perm(5,2) ## [1] 20 "],
["chap3.html", "Chapter3 Discrete Distributions 3.1 Expected value (3.3) 3.2 Variance (3.3) 3.3 Variance (alternative method) (3.3) 3.4 Binominal Theorem (3.4) 3.5 Hypergeometric (3.5) 3.6 Poisson (3.6)", " Chapter3 Discrete Distributions Devore, Chapter 3 3.1 Expected value (3.3) x &lt;- 1:5 x ## [1] 1 2 3 4 5 px &lt;- c(.1, .15, .2, .25, .3) px ## [1] 0.10 0.15 0.20 0.25 0.30 x*px ## [1] 0.1 0.3 0.6 1.0 1.5 sum(x*px) # E(X) ## [1] 3.5 3.2 Variance (3.3) x - 3.5 ## [1] -2.5 -1.5 -0.5 0.5 1.5 (x - 3.5)^2 ## [1] 6.25 2.25 0.25 0.25 2.25 ((x - 3.5)^2)*px ## [1] 0.6250 0.3375 0.0500 0.0625 0.6750 sum(((x - 3.5)^2)*px) # V(X) ## [1] 1.75 3.3 Variance (alternative method) (3.3) x ## [1] 1 2 3 4 5 px ## [1] 0.10 0.15 0.20 0.25 0.30 x^2 ## [1] 1 4 9 16 25 (x^2)*px ## [1] 0.1 0.6 1.8 4.0 7.5 sum((x^2)*px) # E(X^2) ## [1] 14 14-3.5^2 # E(X^2) - [E(X)]^2 ## [1] 1.75 3.4 Binominal Theorem (3.4) choose(8, 3) # &quot;8 choose 3&quot; ## [1] 56 56*.6^3*.4^5 # P(X = 3) given n = 8, p = .6 ## [1] 0.123863 Direct method dbinom(3, 8, .6) # P(X = 3) given n = 8, p = .6 ## [1] 0.123863 3.5 Hypergeometric (3.5) Note that the notation that R uses is different from the Devore textbook: parameter Devore R total successes M m total failures N-M n sample size n k successes in sample x x Example (p. 127) Devore: h(x; n, M, N) P(X = 2) = h(2; 10, 5, 25) –&gt; dhyper(x = 2, m = 5, n = 20, k = 10) ## [1] 0.3853755 3.6 Poisson (3.6) Example (p. 132) p(3;2) = dpois(3,2) ## [1] 0.180447 F(3;2) = ppois(3, 2) ## [1] 0.8571235 "],
["chap4.html", "Chapter4 Continuous Distributions 4.1 Normal distribution", " Chapter4 Continuous Distributions Devore, Chapter 4 4.1 Normal distribution \\(P(Z \\leq -1)\\) Unless specified otherwise, pnorm uses a mean of 0 and standard deviation of 1 (standard normal). pnorm(-1) ## [1] 0.1586553 \\(P(X \\leq 37)\\) given \\(\\mu = 40\\) and \\(\\sigma = 2\\) pnorm(37, mean = 40, sd = 2) ## [1] 0.0668072 or pnorm((37-40)/2) ## [1] 0.0668072 \\(P(X &gt; 39)\\) 1 - pnorm(39, mean = 40, sd = 2) ## [1] 0.6914625 Find the 75th percentile for the standard normal distribution: qnorm(.75) ## [1] 0.6744898 Find the 75th percentile for a normally distribution population with mean 40 and standard deviation 2: qnorm(.75, mean = 40, sd = 2) ## [1] 41.34898 or 40 + qnorm(.75)*2 ## [1] 41.34898 "],
["chap5.html", "Chapter5 Chapter Title 5.1 New content", " Chapter5 Chapter Title Devore, Chapter 5 5.1 New content "]
]
